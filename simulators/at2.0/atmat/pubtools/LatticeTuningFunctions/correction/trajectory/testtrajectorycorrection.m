% test errors and correction functions
close all
clear all

addpath('/mntdirect/_machfs/liuzzo/CODE/LatticeTuningFunctions');
addpath('/mntdirect/_machfs/liuzzo/CODE/LatticeTuningFunctions/correction/response matrix')
addpath('/mntdirect/_machfs/liuzzo/CODE/LatticeTuningFunctions/correction/');
addpath('/mntdirect/_machfs/liuzzo/CODE/LatticeTuningFunctions/errors/');

% load lattice
load ESRFLattice.mat
r0=ring;
%% get RM
speclab='TrajectoryDppESRF';

modelrmfile=fullfile(pwd,['RMmodel' speclab '.mat']);%

if ~exist([modelrmfile],'file')
    
    ModelRM...
        =getresponsematrices(...
        ring,...
        indBPM,...
        indHCor,...
        indVCor,...
        indSCor,...
        indQCor,...
        [],...
        [0 0 0 0 0 0]',...
        [4 5 6]);
    
    save([modelrmfile],'ModelRM');
else
    load([modelrmfile],'ModelRM');
end

% set errors, large, AT does not find a closed orbit
ind=find(atgetcells(ring,'Class','Quadrupole'));
dx=1.0e-4*randn(size(ind));
dy=1.0e-4*randn(size(ind));

rerr=atsetshift(ring,ind,dx,dy);

%% apply correction
inCOD=[0 0 0 0 0 0]';

[rcor,inCOD]=atfirstturntrajectory(...
    rerr,...
    inCOD,...
    indBPM,...
    indHCor,...
    indVCor,...
    0.5e-2,...
    30,...
    [false true],...
    ModelRM,...
    zeros(2,length(indBPM)),...
    []);
% X: 568.781 -> 256.872 um
% Y: 350.971 -> 155.680 um

o=findtrajectory6Err(rerr,indBPM,inCOD);
oxe=o(1,:);
oye=o(3,:);

o=findtrajectory6Err(rcor,indBPM,inCOD);
oxc=o(1,:);
oyc=o(3,:);

sBPM=findspos(rcor,indBPM);
figure;subplot(2,1,1);
plot(sBPM,oxe,'.-');hold on; plot(sBPM,oxc,'.-');
legend('before','after');
xlabel('s [m]');
ylabel('hor. COD');
subplot(2,1,2);
plot(sBPM,oye,'.-');hold on; plot(sBPM,oyc,'.-');
legend('before','after');
xlabel('s [m]');
ylabel('ver. COD');
saveas(gca,'TrajCor.fig');
% export_fig('TrajCor.jpg','-r300');
% return

return

[rcor,inCOD]=atfirstturntrajectory(...
    rerr,...
    inCOD,...
    indBPM,...
    indHCor,...
    indVCor,...
    2.0e-3,...
    60,...
    [true false],...
    ModelRM,...
    zeros(2,length(indBPM)),...
    [5e-3 5e-3]);
% X: 407.753 -> 216.807 um
% Y: 300.986 -> 146.863 um

[rcor,inCOD]=atfirstturntrajectory(...
    rerr,...
    inCOD,...
    indBPM,...
    indHCor,...
    indVCor,...
    2.0e-3,...
    60,...
    [false true],...
    ModelRM,...
    zeros(2,length(indBPM)),...
    [5e-3 5e-3]);
% X: 502.317 -> 247.443 um
% Y: 343.767 -> 157.849 um

[rcor,inCOD]=atfirstturntrajectory(...
    rerr,...
    inCOD,...
    indBPM,...
    indHCor,...
    indVCor,...
    2.0e-3,...
    60,...
    [false false],...
    ModelRM,...
    zeros(2,length(indBPM)),...
    [5e-3 5e-3]);
% X: 614.390 -> 259.440 um
% Y: 361.596 -> 166.576 um


%% no input ModelRM, pass r0 to compute it!
[rcor,inCOD]=atfirstturntrajectory(...
    rerr,...
    inCOD,...
    indBPM,...
    indHCor,...
    indVCor,...
    2.0e-3,...
    60,...
    [true false],...
    r0);

